head(renewable_use )
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")|>
arrange(desc(renewable_use ))
renewable_use
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")|>
arrange(renewable_use, descending = TRUE )
renewable_use
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")|>
arrange(renewable_use, descending = FALSE )
renewable_use
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")|>
arrange(desc(renewable_use))
renewable_use
renewable_use = renew_use_2023 |>
inner_join(renew_use_2022, by = "State")|>
renewable_use
renewable_use = renew_use_2023 |>
inner_join(renew_use_2022, by = "State")
renewable_use
renewable_use = renew_use_2023 |>
semi_join(renew_use_2022, by = "State")
renewable_use
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")
renewable_use
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State", values_drop_na = TRUE)
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")|>
drop_na()
renewable_use
renewable_use = renew_use_2023 |>
left_join(renew_use_2022, by = "State")|>
drop_na()|>
mutate(mean_energy = (renewable_use$Renewable_Use_2023+ renewable_use$ Renewable_Use_2022/2))
renewable_use <- renew_use_2023 |>
rename(Renewable_Use_2023 = Renewable_Use) |>
left_join(
renew_use_2022 |> rename(Renewable_Use_2022 = Renewable_Use),
by = "State"
) |>
drop_na() |>
mutate(mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)
renewable_use
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|> drop_na()
renewable_use
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy)
renewable_use
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
renewable_use
joined_table = renewable_use |>
inner_join(ev_registrations_by_state_2023)
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023)
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'STATE')
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
ev_registrations_by_state_2023 = ev_registrations_by_state_2023 |>
rename(State = STATE)
names(ev_registrations_by_state_2023 )
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
ev_registrations_by_state_2023 = ev_registrations_by_state_2023 |>
rename(State = electric vehicle registrations_by_state (2023))
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
ev_registrations_by_state_2023 = ev_registrations_by_state_2023 |>
rename(State = `electric vehicle registrations_by_state(2023)`)
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
#ev_registrations_by_state_2023 = ev_registrations_by_state_2023 |>
# rename(State = `electric vehicle registrations_by_state(2023)`)
renewable_use
head(ev_registrations_by_state_2023)
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
ev_registrations_by_state_2023 = ev_registrations_by_state_2023 |>
rename(State = `electric vehicle registrations_by_state(2023)`)
colnames(ev_registrations_by_state_2023)
renewable_use <- renew_use_2023 |>
left_join( renew_use_2022,by = "State") |>
drop_na() |>
mutate(
Renewable_Use_2023 = as.numeric(Renewable_Use_2023),
Renewable_Use_2022 = as.numeric(Renewable_Use_2022),
mean_energy = (Renewable_Use_2023 + Renewable_Use_2022) / 2)|>
drop_na()|>
arrange(desc(mean_energy))
ev_registrations_by_state_2023 = ev_registrations_by_state_2023 |>
rename(State = `electric vehicle registrations_by_state (2023)`)
renewable_use
head(ev_registrations_by_state_2023)
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = '')
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State')
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State')
joined_table
rename(ev_registrations_by_state_2023, Count = `...2`)
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State')
joined_table
ev_registrations_by_state_2023= rename(ev_registrations_by_state_2023, Count = `...2`)
ev_registrations_by_state_2023= rename(ev_registrations_by_state_2023, Count = `...2`)
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State'
)
joined_table
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State')|> drop_na()
joined_table
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State')
joined_table
joined_table = renewable_use |>
inner_join(ev_registrations_by_state_2023, by = 'State')
joined_table
joined_table = renewable_use |>
right_join(ev_registrations_by_state_2023, by = 'State')
joined_table
joined_table = renewable_use |>
left_join(ev_registrations_by_state_2023, by = 'State')
joined_table
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
set.seed(2)
x = seq(0,90)
epsilon <- rnorm(n = length(x), mean = 0, sd = 10)
y <- 211.6 - 0.1 * (44 - x)^2 + epsilon
table <- data.frame(x = x, y = y, epsilon = epsilon)
print(head(df))
plot(table$x, table$y,
main = "Distance Traveled (y) vs. Angle of Ejection (x)",
xlab = "Angle of Ejection (x) [degrees]",
ylab = "Distance Traveled (y) [feet]",
)
head(table)
design_matrix = cbind(1,table$x,table$x**2)
y_matrix = matrix(c(table$y))
transpose = t(design_matrix)
inverse_multiplied = solve(transpose %*% design_matrix)
new_outcome = inverse_multiplied %*% transpose %*% y_matrix
b0 = new_outcome[1]
b1 = new_outcome[2]
b2 = new_outcome[3]
design_matrix = cbind(1,table$x,table$x**2)
y_matrix = matrix(c(table$y))
transpose = t(design_matrix)
inverse_multiplied = solve(transpose %*% design_matrix)
new_outcome = inverse_multiplied %*% transpose %*% y_matrix
b0 = new_outcome[1]
b1 = new_outcome[2]
b2 = new_outcome[3]
b0
b1
b2
model <- lm(y ~ x + I(x^2), data = table)
model
model <- lm(y ~ x + I(x^2), data = table)
model
vector = seq(from = 40,to= 50)
x_derivative = -b1/(2*b2)
paste0("The distance traveled when angle zero is  ",  f_x(0), sep = "   ")
paste0("The distance traveled when angle ninety is  ",  f_x(90), sep = "   ")
paste0("The maximum possible distance with error zero   ", max(f_x(vector)), sep = "   ")
paste0("The optimal  angle to achieve maximum distance  ", x_derivative, sep = "   ")
##using to find x from the derivative of our b1 and b2 function we get
model <- lm(y ~ x + I(x^2), data = table)
model
f_x = function(x){
new_y = b0 + b1*x + b2*x**2
return (new_y)
}
y1 = f_x(x)
library(ggplot2)
ggplot(table, aes(x=x, y = y))+
geom_point(color='blue')+
geom_path( aes(y = y1), color = "red",
linewidth = 1.5)+
labs(
title = "Data with Curve of Best Fit",
x = "Angle of Ejection (x)",
y = "Distance Traveled (y)"
) +
theme_minimal()
vector = seq(from = 40,to= 50)
x_derivative = -b1/(2*b2)
paste0("The distance traveled when angle zero is  ",  f_x(0), sep = "   ")
paste0("The distance traveled when angle ninety is  ",  f_x(90), sep = "   ")
paste0("The maximum possible distance with error zero   ", max(f_x(vector)), sep = "   ")
paste0("The optimal  angle to achieve maximum distance  ", x_derivative, sep = "   ")
##using to find x from the derivative of our b1 and b2 function we get
fit_y2 <- lm(y2 ~ I(x^3), data = practice)
summary(fit_y2)
beta_hat2 <- coef(fit_y2)
intercept2 <- beta_hat2[1]
slope2 <- beta_hat2[2]
practice <- practice |>
mutate(y2_hat = intercept2 + slope2 * x^3)
ggplot(practice, aes(x = x, y = y2)) +
geom_point(color = "red") +
geom_path(aes(y = y2_hat), color = "black", size = 1) +
labs(
title = "x vs y2 with fitted line",
x = "x",
y = "y2"
) +
theme_minimal()
fit_y1 <- lm(y1 ~ x, data = practice)
summary(fit_y1)
beta_hat <- coef(fit_y1)
intercept <- beta_hat[1]
slope <- beta_hat[2]
practice <- practice |>
mutate(y1_hat = intercept + slope * x)
ggplot(practice, aes(x = x, y = y1)) +
geom_point(color = "red") +
geom_path(aes(y = y1_hat), color = "black", size = 1) +
labs(
title = "x vs y1 with fitted line",
x = "x",
y = "y1"
) +
theme_minimal()
practice = read.csv("practice.csv")
head(practice)
fit_y1 <- lm(y1 ~ x, data = practice)
summary(fit_y1)
beta_hat <- coef(fit_y1)
intercept <- beta_hat[1]
slope <- beta_hat[2]
practice <- practice |>
mutate(y1_hat = intercept + slope * x)
ggplot(practice, aes(x = x, y = y1)) +
geom_point(color = "red") +
geom_path(aes(y = y1_hat), color = "black", size = 1) +
labs(
title = "x vs y1 with fitted line",
x = "x",
y = "y1"
) +
theme_minimal()
fit_y2 <- lm(y2 ~ I(x^3), data = practice)
summary(fit_y2)
beta_hat2 <- coef(fit_y2)
intercept2 <- beta_hat2[1]
slope2 <- beta_hat2[2]
practice <- practice |>
mutate(y2_hat = intercept2 + slope2 * x^3)
ggplot(practice, aes(x = x, y = y2)) +
geom_point(color = "red") +
geom_path(aes(y = y2_hat), color = "black", size = 1) +
labs(
title = "x vs y2 with fitted line",
x = "x",
y = "y2"
) +
theme_minimal()
fit_y3 <- lm(y3 ~ Iabs(x), data = practice)
summary(fit_y3)
beta_hat3 <- coef(fit_y3)
intercept3 <- beta_hat3[1]
slope3 <- beta_hat3[2]
practice <- practice |>
mutate(y3_hat = intercept3 + slope3 * abs(x)
ggplot(practice, aes(x = x, y = y3)) +
geom_point(color = "red") +
geom_path(aes(y = y3_hat), color = "black", size = 1) +
labs(
title = "x vs y3 with fitted line",
x = "x",
y = "y3"
) +
theme_minimal()
fit_y3 <- lm(y3 ~ I(abs(x)), data = practice)
summary(fit_y3)
beta_hat3 <- coef(fit_y3)
intercept3 <- beta_hat3[1]
slope3 <- beta_hat3[2]
practice <- practice |>
mutate(y3_hat = intercept3 + slope3 * abs(x)
ggplot(practice, aes(x = x, y = y3)) +
geom_point(color = "red") +
geom_path(aes(y = y3_hat), color = "black", size = 1) +
labs(
title = "x vs y3 with fitted line",
x = "x",
y = "y3"
) +
theme_minimal()
fit_y3 <- lm(y3 ~ I(abs(x)), data = practice)
summary(fit_y3)
beta_hat3 <- coef(fit_y3)
intercept3 <- beta_hat3[1]
slope3 <- beta_hat3[2]
practice <- practice |>
mutate(y3_hat = intercept3 + slope3 * abs(x))
ggplot(practice, aes(x = x, y = y3)) +
geom_point(color = "red") +
geom_path(aes(y = y3_hat), color = "black", size = 1) +
labs(
title = "x vs y3 with fitted line",
x = "x",
y = "y3"
) +
theme_minimal()
fit_y4 <- lm(y4 ~ I(sin(x)), data = practice)
summary(fit_y4)
beta_hat4 <- coef(fit_y4)
intercept4 <- beta_hat4[1]
slope4 <- beta_hat4[2]
practice <- practice |>
mutate(y4_hat = intercept4 + slope4 *sin(x))
ggplot(practice, aes(x = x, y = y4)) +
geom_point(color = "red") +
geom_path(aes(y = y4_hat), color = "black", size = 1) +
labs(
title = "x vs y3 with fitted line",
x = "x",
y = "y3"
) +
theme_minimal()
renewable_by_state <- renewable_use |>
group_by(State) |>
summarise(
total_mean_renewable = sum(mean_energy, na.rm = TRUE)
)
combined_data <- renewable_by_state |>
left_join(ev_registrations_by_state_2023, by = "State")
combined_data <- renewable_by_state |>
left_join(ev_registrations_by_state_2023, by = "State")
combined_data <- combined_data |>
mutate(EV_Registrations_2023 = as.numeric(EV_Registrations_2023))
combined_data <- renewable_by_state |>
left_join(ev_registrations_by_state_2023, by = "State")
combined_data <- combined_data |>
mutate(EV_Registrations_2023 = as.numeric(Count))
combined_data <- renewable_by_state |>
left_join(ev_registrations_by_state_2023, by = "State")
combined_data <- combined_data |>
mutate(EV_Registrations_2023 = as.numeric(Count))
combined_data
colnames(ev_registrations_by_state_2023)
ev_registrations_by_state_2023 <- ev_registrations_by_state_2023 |>
mutate(State = state.abb[match(State, state.name)])
ev_registrations_by_state_2023 <- ev_registrations_by_state_2023 |>
mutate(State = state.abb[match(State, state.name)])
ev_registrations_by_state_2023
View(ev_registrations_by_state_2023)
ev_registrations_by_state_2023 <- ev_registrations_by_state_2023 |>
mutate(State = state.name[match(State, state.abb)])
ev_registrations_by_state_2023
library(tidyr)
library(ggplot2)
library(dplyr)
head(total_use_2022)
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
total_use_2022 <- read_csv("data/total_use_2022.csv")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
total_use_2022 <- read_csv("/Users/sujan/Desktop/Sem 3/133/ev-power-Sujanyaa194/data/total_use_2022.csv")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
total_use_2022 <- read_csv("/Users/sujan/Desktop/Sem 3/133/ev-power-Sujanyaa194/data/total_use_2022.csv")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
total_use_2022 <- read_csv("Users/sujan/Desktop/Sem 3/133/ev-power-Sujanyaa194/data/total_use_2022.csv")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
setwd("/Users/sujan/Desktop/Sem 3/133/ev-power-Sujanyaa194")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
setwd("Users/sujan/Desktop/Sem 3/133/ev-power-Sujanyaa194")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
getwd()
#setwd("Users/sujan/Desktop/Sem 3/133/ev-power-Sujanyaa194")
#total_use_2022 <- read_csv("data/total_use_2022.csv")
#total_use_2021 <- read_csv("data/total_use_2021.csv")
#renew_use_2023 <- read_csv("data/renew_use_2023.csv")
#renew_use_2022 <- read_csv("data/renew_use_2022.csv")
#ev_registrations_by_state_2023 <- read_csv("data/ev_registrations_by_state_2023.csv")
#av_energy_price_2021_2023 <- read_csv("data/av_energy_price_2021_2023.csv")
library(tidyr)
library(ggplot2)
library(dplyr)
library(readr)
library(readxl)
getwd()
total_use_2022 <- read_csv("data/total_use_2022.csv")
library(readr)
av_energy_price_2021_2023 <- read_csv("data/av-energy-price-2021-2023.csv")
View(av_energy_price_2021_2023)
library(readr)
ev_registrations_by_state_2023 <- read_csv("data/ev-registrations-by-state-2023.csv")
View(ev_registrations_by_state_2023)
library(readr)
renew_use_2021 <- read_csv("data/renew-use-2021.csv")
View(renew_use_2021)
library(readr)
dataset <- read_csv(NULL)
library(readr)
renew_use_2022 <- read_csv("data/renew-use-2022.csv")
View(renew_use_2022)
library(readr)
renew_use_2023 <- read_csv("data/renew-use-2023.csv")
View(renew_use_2023)
library(readr)
total_use_2021 <- read_csv("data/total-use-2021.csv")
View(total_use_2021)
library(readr)
total_use_2022 <- read_csv("data/total-use-2022.csv")
View(total_use_2022)
library(readr)
total_use_2023 <- read_csv("data/total-use-2023.csv")
View(total_use_2023)
